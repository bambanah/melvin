name: "Lint and Test"

on:
  pull_request:
    branches:
      - main

env:
  DATABASE_URL: postgres://postgres:pass@localhost:5432/melvin
  DIRECT_URL: postgres://postgres:pass@localhost:5432/melvin
  NEXTAUTH_URL: "http://localhost:3000"

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: pass
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile

      - name: Install playwright browsers
        run: npx playwright install

      - name: Initialise database
        run: pnpm prisma:push

      - name: Run tests
        run: pnpm test:e2e

  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test:unit

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile

      - name: ESlint
        run: pnpm lint

      - name: TypeScript
        run: pnpm type-check

      - name: Prettier
        run: pnpm format:check
